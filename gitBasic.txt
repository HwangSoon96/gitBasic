git - 로컬 버전 관리 프로그램.
github - 원격 코드 저장소?


[git 기본 명령어]
git config --global user.name HwangSoon96 -> 깃헙이랑 이거랑 맞아야 잔디 심기 가능
git config --global user.email te44382@gmail.com -> 깃헙이랑 이거랑 맞아야 잔디 심기 가능
git config --list -> 위의 설정 확인 가능

깃을 사진 찍는 것에 비유하자면 크게 3가지 단계가 있다.
사진사 고용 (git init) -> 프로젝트 시작 시 최초 1회만 하면 된다.

사진 찍을 사람들 모으기 (git add) -> git add .(점하면 전체 파일 add), 사진 찍을 사람들(코드 파일)

사진 찍기 (git commit) -> git commit -m "initial commit", -m하고 뒤에 메세지 적으면 나중에 git log로 기록 볼 때, 그 메세지도 같이 보인다. 맨 처음 커밋은 initial commit이라 하는게 국룰인듯

git status -> 현재 폴더 파일들의 상태 보여줌(커밋 가능인지 아닌지 등)

git reset --hard -> 그냥 실행하면 마지막 커밋으로 파일 복구시켜주고, 특정 커밋으로 돌아가고 싶다면 git log 해서 나오는 커밋별 문자열(?) 복사해서 뒤에 붙여주면 그 커밋으로 돌아간다.

[git과 github 연결]
github에서 새로운 저장소를 만들었다면
git remote add origin -> 이거 뒤에 https://github.com/HwangSoon96/gitBasic
이렇게 저장소 주소 붙여주면 된다.
오류가 나면 git remote rm origin으로 삭제 해주고 나서 다시 해준다.

git push origin main -> 이러면 현재 코밋된 것들이 깃허브에 추가가 된다.

만약 로컬에서 깃허브에 푸쉬한 파일 지웠다면, 다시 클론해오면 된다.
git clone 깃허브 저장소 주소 -> 이러면 내 로컬 폴더에 파일 생긴다.

git pull origin main -> 만약 깃허브 쪽에서 변경 사항이 생겨 그걸 내 로컬에 적용하고 싶다면 이렇게 하면 된다.

만약 reset을 맨 처음으로 시켜버렸다면 그 이후 버전은 깃허브에 각 커밋에 저장된 커밋코드(?)를
복사하여 git reset --hard 커밋코드 를 해도 되고, 아니면 그냥 처음으로 돌려버린거 지워버리고 깃허브꺼 클론해오면 된다.

[프로젝트 깃허브에 올리기]
1. 기존 위의 과정 그대로 진행
2. 깃허브에 빈 저장소 만들고 클론 해와서 클론해온 파일에 원하는 코드파일 넣어주고 푸쉬

.gitignore 파일 만들어서
*.exe 등과 같이 올리고 싶지 않은 파일 지정해주면 깃허브에 해당 파일은 올라가지 않는다.
매번 설정 & 어떤 걸 설정해야 할지 잘 모르겠으면 아래 사이트에서 사용하는 언어 + 툴
추가해서 .gitignore에 들어갈 내용 알아서 생성해준다.
https://www.toptal.com/developers/gitignore

[브랜치 만들기]
브랜치란 나무의 가지가 여러 방향으로 가지치기를 하듯, 협업 시에 각자의 공간에서 코딩을 한 후, 나중에 한번에 합칠 때 필요한 개념
a -> c -> d -> 다시 합치기
       -> q -> 다시 합치기
git branch -> 어떤 브랜치가 있나 확인 가능
git branch branch이름 -> 새로운 branch 생성
git checkout branch이름 -> branch 이동
d q 각자 브랜치에서 푸쉬 후에 깃허브에서 pull request + merge 할 수 있다.

[fork]
남의 저장소를 그대로 내 저장소로 가져오는 것
남의 저장소를 가져와서 내 로컬에 클론 후에 수정하고, 다시 내 깃허브에 푸쉬하고 포크를 해온
원작자에게 pull request를 요청하여 원작자가 수락하면 내가 수정한 사항이 merge 될 수 있다.
이러한 방식이 흔히들 말하는 오픈소스에 기여하는 방식이다.

[slack 연동]
slack에 내 workspace 만든 후에 깃허브 앱 추가, 원하는 채널에서 /github subscribe HwangSoon/원하는 저장소 이름 하면 설치 및 알림 받을 저장소 설정 후 최종적으로 슬랙으로 알림 받을 수 있다.